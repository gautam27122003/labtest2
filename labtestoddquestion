import pandas as pd
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
#from sklearn.preprocessing import Imputer
from sklearn.svm import LinearSVC
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score,mean_squared_error
from sklearn.datasets import fetch_california_housing
#a

#housing=fetch_california_housing()
housing_data=fetch_california_housing()
#features=housing_data.columns.tolist()
#print(features)
cate_features=data.select_dtypes('category','object').columns.tolist()
num_features=data.select_dtypes('number').columns.tolist()
print("the count of category is",len(cate_features),"the count of num_feature",len(num_features))
#b
house_data=data['price of house']
bedroom_data=data['No of bedrooms']
plt.plot(house_data,bedroom_data,marker='o')
plt.title("price of house vs No of bedrooms ")
plt.xlabel("price of house")
plt.ylabel("No of bedrooms")
#c
imp=Imputer(missing_values=0,startegy='mean',axis=0)
imp.fit_transform(housing_data[features])
x=housing_data.data
y=housing_data.target
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.4,random_state=42)
svc_model=LinearSVC(random_state=0)
pred=svc_model.fit(x_train,y_train).predict(x_test)
print("accuracy",accuracy_score(y_test,pred,normalize=True))
#d
linermodel=LinearRegression()
y_pred=linearmodel.fit(x_train,y_train).fit(x_test)
acc=accuracy_score(y_test,y_pred)
print(mse)





